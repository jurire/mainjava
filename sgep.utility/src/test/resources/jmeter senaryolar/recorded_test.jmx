<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Planı" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Kullanıcı Tanımlı Değişkenler" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1447849085000</longProp>
        <longProp name="ThreadGroup.end_time">1447849085000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="56 /tescil/login.xhtml" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/tescil/login.xhtml</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="63 /tescil/login.xhtml" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="loginFormxx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">loginFormxx</stringProp>
                  <stringProp name="Argument.value">loginFormxx</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loginFormxx:username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loginFormxx:username</stringProp>
                  <stringProp name="Argument.value">test</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loginFormxx:password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loginFormxx:password</stringProp>
                  <stringProp name="Argument.value">ert</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loginFormxx:j_idt15" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">loginFormxx:j_idt15</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                  <stringProp name="Argument.value">H4sIAAAAAAAAAF2Rv0sDMRTHY3tXfyK1ipPdXBw8cBMdtKDFw/oDQREcNL2LbUouOZNcL+dQ6KKDi4MODqKDY/8JcXATdHQSd2dXc6XeiQ/ySPJePu/7XjpfwPQFB2MN2IRWIDGx1qCob0Df7H9/fJo8es2CTBkMEQbdMnQk4zYYlHWORJ0RV/lLyyC2kXBA+7xehgRTDvMsEVDrGDpIWCsRhR52So7EjApdazytVeIcRhUspGq/FW+e4W0W9NnAEPgUKT8Gh0bslQQThNUwLTPuKbUQCMQ1FAUadlDp4gikNWur2kCOXLx82b/LixmS0S9jiuFr+4fwoRAh425wAloglyaZjUPsziW3mWRnxvHklG1xMBsXVr0udc8+o4hKa9fewyjcYUxOb3PmIy6jdRQJ0LOCFsXBaCp6lQbe36AWkSNQSNtN/qWbZ1OJaogXPu8fvtvn85l4UmYTkgBpXj7N2wy8KuJnnevi8NXHxe8MtHz1Az7VUgjtAQAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/tescil/login.xhtml</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/tescil/login.xhtml</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="69 /tescil/pages/secure/home.xhtml" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="javax.faces.partial.ajax" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">javax.faces.partial.ajax</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="javax.faces.source" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">javax.faces.source</stringProp>
                  <stringProp name="Argument.value">j_idt5:j_idt15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="javax.faces.partial.execute" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">javax.faces.partial.execute</stringProp>
                  <stringProp name="Argument.value">@all</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="javax.faces.partial.render" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">javax.faces.partial.render</stringProp>
                  <stringProp name="Argument.value">j_idt5:msgs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_idt5:j_idt15" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_idt5:j_idt15</stringProp>
                  <stringProp name="Argument.value">j_idt5:j_idt15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_idt5" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">j_idt5</stringProp>
                  <stringProp name="Argument.value">j_idt5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                  <stringProp name="Argument.value">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</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/tescil/pages/secure/home.xhtml</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Faces-Request" elementType="Header">
                  <stringProp name="Header.name">Faces-Request</stringProp>
                  <stringProp name="Header.value">partial/ajax</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/xml, text/xml, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/tescil/login.xhtml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="71 /tescil/pages/secure/home.xhtml" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="javax.faces.partial.ajax" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">javax.faces.partial.ajax</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="javax.faces.source" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">javax.faces.source</stringProp>
                  <stringProp name="Argument.value">j_idt5:j_idt15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="javax.faces.partial.execute" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">javax.faces.partial.execute</stringProp>
                  <stringProp name="Argument.value">@all</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="javax.faces.partial.render" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">javax.faces.partial.render</stringProp>
                  <stringProp name="Argument.value">j_idt5:msgs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_idt5:j_idt15" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_idt5:j_idt15</stringProp>
                  <stringProp name="Argument.value">j_idt5:j_idt15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_idt5" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">j_idt5</stringProp>
                  <stringProp name="Argument.value">j_idt5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                  <stringProp name="Argument.value">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</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/tescil/pages/secure/home.xhtml</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Faces-Request" elementType="Header">
                  <stringProp name="Header.name">Faces-Request</stringProp>
                  <stringProp name="Header.value">partial/ajax</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/xml, text/xml, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/tescil/login.xhtml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="72 /tescil/pages/secure/home.xhtml" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="j_idt5" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">j_idt5</stringProp>
                  <stringProp name="Argument.value">j_idt5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="j_idt5:j_idt14" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j_idt5:j_idt14</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="javax.faces.ViewState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">javax.faces.ViewState</stringProp>
                  <stringProp name="Argument.value">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</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/tescil/pages/secure/home.xhtml</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/tescil/login.xhtml</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
